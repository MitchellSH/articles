{"ast":null,"code":"var _jsxFileName = \"/Users/Mitchell/Documents/code/my-code.projects/mern-crud-articles/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      intervalIsSet: false\n    };\n\n    this.getAllArticles = () => {\n      axios.get('/articles').then(res => {\n        this.setState({\n          articles: res.data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.addArticle = () => {\n      let currentIds = this.state.articles.map(articles => articles._id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllArticles();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getAllArticles, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const articles = this.state.articles;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, articles.length <= 0 ? \"NO ARTICLES FOUND\" : articles.map(dat => React.createElement(\"li\", {\n      style: {\n        padding: \"10px\"\n      },\n      key: dat._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" id: \"), \" \", dat._id, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" title: \"), \" \", dat.title, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" data: \"), dat.content))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Mitchell/Documents/code/my-code.projects/mern-crud-articles/client/src/App.js"],"names":["React","Component","axios","App","state","articles","intervalIsSet","getAllArticles","get","then","res","setState","data","catch","err","console","log","addArticle","currentIds","map","_id","idToBeAdded","includes","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","length","dat","padding","color","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BG,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,aAAa,EAAE;AAFT,KAFkB;;AAAA,SAsB1BC,cAtB0B,GAsBT,MAAM;AACrBL,MAAAA,KAAK,CAACM,GAAN,CAAU,WAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,aAAKC,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAAEK,GAAG,CAACE;AAAf,SAAd;AACD,OAHH,EAIGC,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD,KA5ByB;;AAAA,SA8B1BG,UA9B0B,GA8Bb,MAAM;AACjB,UAAIC,UAAU,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwBd,QAAQ,IAAIA,QAAQ,CAACe,GAA7C,CAAjB;AACA,UAAIC,WAAW,GAAG,CAAlB;;AACA,aAAOH,UAAU,CAACI,QAAX,CAAoBD,WAApB,CAAP,EAAyC;AACvC,UAAEA,WAAF;AACD;AACF,KApCyB;AAAA;;AAO1BE,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,cAAL;;AACA,QAAI,CAAC,KAAKH,KAAL,CAAWE,aAAhB,EAA+B;AAC7B,UAAIkB,QAAQ,GAAGC,WAAW,CAAC,KAAKlB,cAAN,EAAsB,IAAtB,CAA1B;AACA,WAAKI,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAEkB;AAAjB,OAAd;AACD;AACF;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKtB,KAAL,CAAWE,aAAf,EAA8B;AAC5BqB,MAAAA,aAAa,CAAC,KAAKvB,KAAL,CAAWE,aAAZ,CAAb;AACA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD;AACF;;AAkBDsB,EAAAA,MAAM,GAAG;AAAA,UACAvB,QADA,GACY,KAAKD,KADjB,CACAC,QADA;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACwB,MAAT,IAAmB,CAAnB,GACG,mBADH,GAEGxB,QAAQ,CAACc,GAAT,CAAaW,GAAG,IAChB;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAX;AAAgC,MAAA,GAAG,EAAED,GAAG,CAACV,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACgDF,GAAG,CAACV,GADpD,OACyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzD,EAEE;AAAM,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,OAEmDF,GAAG,CAACG,KAFvD,OAE8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF9D,EAGE;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIGF,GAAG,CAACI,OAJP,CADA,CAHN,CADF,CADF;AAgBD;;AAxDyB;;AA2D5B,eAAe/B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component {\n\n  state = {\n    articles: [],\n    intervalIsSet: false,\n  };\n\n  componentDidMount() {\n    this.getAllArticles();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getAllArticles, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  getAllArticles = () => {\n    axios.get('/articles')\n      .then(res => {\n        this.setState({articles: res.data})\n      })\n      .catch(err => console.log(err))\n  };\n\n  addArticle = () => {\n    let currentIds = this.state.articles.map(articles => articles._id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n  };\n\n  render() {\n    const {articles} = this.state;\n    return (\n      <div>\n        <ul>\n          {articles.length <= 0\n            ? \"NO ARTICLES FOUND\"\n            : articles.map(dat => (\n              <li style={{ padding: \"10px\" }} key={dat._id}>\n                <span style={{ color: \"gray\" }}> id: </span> {dat._id} <br />\n                <span style={{ color: \"gray\" }}> title: </span> {dat.title} <br />\n                <span style={{ color: \"gray\" }}> data: </span>\n                {dat.content}\n              </li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}